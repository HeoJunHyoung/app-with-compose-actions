version: '3'

services:
  #db:
    #container_name: db-server
    #image: mysql:8.0
    #ports:
      #- 3306:3306
    #environment:
      #MYSQL_ROOT_PASSWORD: root
      #MYSQL_DATABASE: app
      #MYSQL_USER: app
      #MYSQL_PASSWORD: app12345
    #networks:
      #- app-network
    #healthcheck:
      #test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD']
      #interval: 10s
      #timeout: 2s
      #retries: 100
    #deploy:  # 리소스 제한 추가
      #resources:
        #limits:
          #cpus: '0.5'
          #memory: 512M
        #reservations:
          #memory: 256M
          
  backend:
    container_name: backend-server
    #image: gjwnsgud4016/app-with-compose-actions:latest

    image: ${{ secrets.AWS_ECR_PRIVATE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_PRIVATE_REPOSITORY }}:${TAG:-latest}
    
    ports:
      - 8080:8080
    environment:
      #MYSQL_HOST: db
      #
      MYSQL_HOST: app-db.czqyg2oku1eb.ap-northeast-2.rds.amazonaws.com
      MYSQL_PORT: 3306
      MYSQL_DATABASE: app
      MYSQL_USER: root
      MYSQL_PASSWORD: root1234
      #
    #depends_on:
      #db:
        #condition: service_healthy
    networks:
      - app-network
    deploy:  # 리소스 제한 추가
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          memory: 512M

networks:
  app-network:
    driver: bridge
